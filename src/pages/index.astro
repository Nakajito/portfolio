---
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectBanner from "@/components/ProjectBanner.astro";
import SkillCard from "@/components/SkillTab.astro";
import InfoPanel from "@/components/InfoPanel.astro";
import Link from "@/components/shared/Link.astro";
import presentation from "@/data/presentation";
import projects from "@/data/projects";
import skills from "@/data/skills";
import { type SkillCardProps } from "@/data/skills";

const blogCollection = await getCollection("blogs");
---

<Layout>
  <div class="container mx-auto px-4 flex flex-col md:flex-row md:justify-between gap-8">
    
    <!-- Panel de InformaciÃ³n -->
    <aside class="w-full md:w-1/3">
      <InfoPanel />
    </aside>

    <!-- Contenido Principal -->
    <main class="w-full md:w-2/3">
      <div class="flex flex-col gap-16 max-w-screen-lg min-h-screen">

        <!-- Sobre mÃ­ -->
        <section class="flex flex-col gap-6">
          <h3 class="text-lg font-semibold">Sobre mÃ­</h3>
          <p class="text-gray-700 max-w-[80ch] leading-6" set:html={presentation.description} />
        </section>

        <!-- Ãšltimos Posts -->
        <section class="flex flex-col gap-6">
          <header class="flex justify-between items-center">
            <h3 class="text-lg font-semibold">Ãšltimos posts</h3>
            <Link href="/blog" label="MÃ¡s" isUnderline target="_self" />
          </header>
          <div class="grid gap-4 grid-cols-1 md:grid-cols-2">
            {blogCollection.length === 0 ? (
              <p class="text-gray-500">Soon, stay connected ðŸ‘€...</p>
            ) : (
              blogCollection.slice(0, 2).map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                />
              ))
            )}
          </div>
        </section>

        <!-- Habilidades -->
        <section class="flex flex-col gap-6">
          <h3 class="text-lg font-semibold">Habilidades</h3>
          <div class="grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
            {Object.keys(skills).length === 0 ? (
              <p class="text-xl text-orange-600">Soon, stay connected ðŸ‘€...</p>
            ) : (
              skills?.map(({ type, skillGroup }: SkillCardProps) => (
                <SkillCard type={type} skillGroup={skillGroup} />
              ))
            )}
          </div>
        </section>

        <!-- Proyectos -->
        <section class="flex flex-col gap-6">
          <header class="flex justify-between items-center">
            <h3 class="text-lg font-semibold">Proyectos ({projects.length})</h3>
            <Link href="/projects" label="MÃ¡s" isUnderline target="_self" />
          </header>
          <div class="grid gap-4 grid-cols-1 md:grid-cols-2">
            {projects.length === 0 ? (
              <p class="text-gray-500">Soon, stay connected ðŸ‘€...</p>
            ) : (
              projects.slice(0, 3).map((project) => (
                <ProjectBanner {...project} />
              ))
            )}
          </div>
        </section>

      </div>
    </main>
  </div>
</Layout>
